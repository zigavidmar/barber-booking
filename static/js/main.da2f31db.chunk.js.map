{"version":3,"sources":["components/AppointmentBooked.js","components/TimePicker.js","components/BookAppointment.js","components/AppointmentBooking.js","App.js","serviceWorker.js","index.js","img/image.jpg"],"names":["AppointmentBooked","props","state","gif","selectedGif","fetch","then","response","json","gifs","data","randomGif","Math","floor","random","length","setState","images","original","url","console","log","catch","err","alert","this","className","alt","src","Component","TimePicker","handleChange","val","e","startDate","timeDisabled","time","excludedTimes","i","getDay","startHour","getWorkingHours","map","day","endHour","callbackGetDateValue","appointmentsDate","toLocaleDateString","selectedDate","getHours","getMinutes","serviceId","setHours","setMinutes","Date","handleTime","value","callbackGetTimeValue","appointments","baseUrl","getAppointments","newValue","appointment","now","moment","toDate","selected","onChange","bind","filterDate","date","minDate","maxDate","addMonths","disabled","datedisabled","placeholderText","dateFormat","errors","showTimeSelect","showTimeSelectOnly","minTime","maxTime","timeIntervals","serviceDuration","timeCaption","excludeTimes","BookAppointment","dateValue","fields","timeValue","toLocaleTimeString","handleClick","field","target","price","dateDisabled","servicePrice","barbers","barber","workHours","serviceDisable","services","test","formValidated","postId","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","event","preventDefault","handleValidation","parse","unixTimestamp","getTime","requestOptions","method","headers","body","JSON","stringify","barberId","parseInt","id","getBarbers","getServices","to","onSubmit","handleSubmit","type","placeholder","pattern","hidden","key","firstName","lastName","service","name","AppointmentBooking","SectionImage","App","basename","path","process","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.da2f31db.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../sass/bookingsuccess.scss';\r\n\r\nexport class AppointmentBooked extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gif: [],\r\n            selectedGif: null,\r\n        };\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const getGif = 'http://api.giphy.com/v1/gifs/search?api_key=KeTn0RgXZQF8EDkUGgQmSaJYuWPEz5mI&q=barber';\r\n\r\n        // GET GIF\r\n\r\n        fetch(getGif)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(response => {\r\n            const gifs = response.data;\r\n            const randomGif = gifs[Math.floor(Math.random() * gifs.length)];\r\n            this.setState({\r\n                gif: randomGif.images.original.url\r\n            }, () => console.log(this.state.gif))\r\n        })\r\n        .catch(err => {\r\n            alert(\"Failed to load gif \" + err)\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { gif } = this.state;\r\n        return (\r\n            <div className=\"section-booking-success\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"center-wrapper\">\r\n                        <h2>Appointment successfully booked</h2>\r\n\r\n                        <div className=\"success-gif-wrapper\">\r\n                            \r\n                            <img alt=\"Barber gif\" src={gif} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppointmentBooked\r\n","import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setMinutes, setHours, addMonths } from 'date-fns';\r\nimport moment from 'moment'\r\nimport { baseUrl } from './BookAppointment';\r\nimport '../sass/bookappointment.scss';\r\n\r\n\r\nexport class TimePicker extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: null,\r\n      startHour: null,\r\n      endHour: null,\r\n      timeDisabled: this.props.timeDisabled,\r\n      time: null,\r\n      appointments: null,\r\n      excludedTimes: [],\r\n    }\r\n  }\r\n\r\n  handleChange = (val, e) => {\r\n    this.setState({\r\n      startDate: val,\r\n      timeDisabled: false,\r\n      time: null,\r\n      excludedTimes: [],\r\n    });\r\n\r\n    const getDay = val.getDay();\r\n\r\n    if (getDay === 1) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[0].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[0].endHour)\r\n      });\r\n    } else if (getDay === 2) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[1].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[1].endHour)\r\n      });\r\n    } else if (getDay === 3) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[2].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[2].endHour)\r\n      });\r\n    } else if (getDay === 4) {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[3].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[3].endHour)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        startHour: this.props.getWorkingHours.map(day => day[4].startHour),\r\n        endHour: this.props.getWorkingHours.map(day => day[4].endHour)\r\n      });\r\n    }\r\n    this.props.callbackGetDateValue(val)\r\n\r\n    var i;\r\n    for (i = 0; i < this.state.appointmentsDate.length; i++) {\r\n      if (`${val.toLocaleDateString()}` === this.state.appointmentsDate[i].toLocaleDateString()) {\r\n        const selectedDate = this.state.appointmentsDate[i];\r\n        const getHours = selectedDate.getHours();\r\n        const getMinutes = selectedDate.getMinutes();\r\n/*         console.log(this.props.serviceId)\r\n */       \r\n        if (this.props.serviceId == 3 && getMinutes === 30) {\r\n          return this.setState({\r\n            excludedTimes: [setHours(setMinutes(new Date(), getMinutes), getHours), setHours(setMinutes(new Date(), getMinutes - 30), getHours + 1)],\r\n          },  /* () => console.log(this.state.excludedTimes) */ )          \r\n        } else if (this.props.serviceId == 3 && getMinutes === 0) {\r\n          return this.setState({\r\n            excludedTimes: [setHours(setMinutes(new Date(), getMinutes), getHours), setHours(setMinutes(new Date(), getMinutes + 30), getHours)],\r\n          },  /* () => console.log(this.state.excludedTimes)  */)   \r\n        } else {\r\n          return this.setState({\r\n            excludedTimes: [setHours(setMinutes(new Date(), getMinutes), getHours)],\r\n          },/*  () => console.log(this.state.excludedTimes) */)\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTime = (value) => {\r\n      this.setState({\r\n      time: value,\r\n    }, /* () => console.log(this.state.time) */);\r\n    this.props.callbackGetTimeValue(value)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n     // GET APPOINTMENTS\r\n\r\n     fetch(baseUrl + '/appointments')\r\n     .then(getAppointments => {\r\n         return getAppointments.json();\r\n     })\r\n     .then(getAppointments => {\r\n        const unix = getAppointments.map(appointment => appointment.startDate)\r\n      \r\n        const newValue = unix.map(value => new Date(value * 1000));\r\n\r\n         this.setState({\r\n             appointmentsDate: newValue,\r\n         }, /* () => console.log(newValue) */)\r\n     })\r\n     .catch(err => {\r\n         alert(\"Failed to load our appointments\" + err)\r\n     });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { startDate, startHour, endHour} = this.state;\r\n    const now = moment().toDate();\r\n    const isWeekday = date => {\r\n      const day = date.getDay();\r\n      return day !== 0 && day !== 6;\r\n    };\r\n \r\n    return (\r\n      <div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker\r\n              selected={startDate}\r\n              onChange={this.handleChange.bind(this)}\r\n              filterDate={isWeekday}\r\n              minDate={new Date()}\r\n              maxDate={addMonths(new Date(), 5)}\r\n              disabled={this.props.datedisabled}\r\n              placeholderText=\"Select Date\"\r\n              dateFormat=\"MMMM d, yyyy\"\r\n          />\r\n          <span className=\"error\">{this.props.errors['date']}</span>\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <DatePicker \r\n            selected={this.state.time}\r\n            onChange={this.handleTime.bind(this)}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            minTime={setHours(setMinutes(now, 0), startHour)}\r\n            maxTime={setHours(setMinutes(now, 30), endHour - 1)}\r\n            timeIntervals={this.props.serviceDuration}\r\n            disabled={this.state.timeDisabled}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm aa\"\r\n            placeholderText=\"Select Time\"\r\n            excludeTimes={this.state.excludedTimes}\r\n          />\r\n          <span className=\"error\">{this.props.errors['time']}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimePicker\r\n","import React, { Component } from 'react'\r\nimport '../sass/bookappointment.scss';\r\nimport { TimePicker } from './TimePicker';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const baseUrl = 'https://api.npoint.io/0d5f88f0335d773fb0c5';\r\n\r\nexport class BookAppointment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            barbers: [],\r\n            services: [],\r\n            startDate: new Date(),\r\n            price: null,\r\n            servicePrice: \"Service Price\",\r\n            dateDisabled: true,\r\n            timeDisabled: true,\r\n            serviceDuration: 0,\r\n            serviceDisable: true,\r\n            getWorkingHours: null,\r\n            test: [],\r\n            formValidated: null,\r\n            dateValue: null,\r\n            timeValue: null,\r\n            postId: null,\r\n        };\r\n\r\n    }\r\n\r\n    callbackGetDateValue = (date) => {\r\n        this.setState({dateValue: date.toLocaleDateString()}, /* () => console.log(this.state.dateValue) */)\r\n        let fields = this.state.fields;\r\n        fields['date'] = date;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    callbackGetTimeValue = (time) => {\r\n        this.setState({timeValue: time.toLocaleTimeString()}, /* () => console.log(this.state.timeValue) */)\r\n        let fields = this.state.fields;\r\n        fields['time'] = time;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n        /* console.log(this.state.dateValue) */\r\n\r\n        //Name\r\n        if(!fields[\"name\"] || !fields[\"surname\"]){\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Please enter your full name\";\r\n        }\r\n    \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n          if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Only letters\";\r\n          }      \t\r\n        }\r\n    \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Please enter your email\";\r\n        }\r\n    \r\n        if(typeof fields[\"email\"] !== \"undefined\"){\r\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n    \r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Please enter a valid email\";\r\n          }\r\n        }\r\n\r\n        //Phone\r\n        if(!fields[\"phone\"]){\r\n            formIsValid = false;\r\n            errors[\"phone\"] = \"Please enter phone number\";\r\n          }\r\n\r\n        //Barber\r\n        if(!fields[\"barber\"]){\r\n            formIsValid = false;\r\n            errors[\"barber\"] = \"Please select a barber\";\r\n        }\r\n\r\n        //Service\r\n        if(!fields[\"service\"]){\r\n            formIsValid = false;\r\n            errors[\"service\"] = \"Please select a service\";\r\n        }\r\n\r\n        // Date\r\n        if(!fields[\"date\"]){\r\n            formIsValid = false;\r\n            errors[\"date\"] = \"Please select a date\";\r\n        }\r\n\r\n        // Time\r\n        if(!fields[\"time\"]){\r\n            formIsValid = false;\r\n            errors[\"time\"] = \"Please select the time\";\r\n        }\r\n        \r\n        /* console.log(this.state.fields) */\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n\r\n    }\r\n    \r\n    handleChange(field, e){    \t\t\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(this.handleValidation()){\r\n            this.setState({\r\n                formValidated: true,\r\n            });\r\n\r\n            const date = new Date(Date.parse(this.state.dateValue + \" \" + this.state.timeValue));\r\n            const unixTimestamp = Math.floor(date.getTime() / 1000);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer my-token',\r\n                    'My-Custom-Header': 'foobar'\r\n                },\r\n                body: JSON.stringify({\r\n                    startDate: unixTimestamp,\r\n                    barberId:   parseInt(this.state.fields['barber']),\r\n                    serviceId: parseInt(this.state.fields['service']),\r\n                })};\r\n\r\n            fetch('http://localhost:3004/appointments', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ postId: data.id }))\r\n        \r\n            } else {\r\n            this.setState({\r\n                formValidated: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick = (field,e) => {\r\n        let fields = this.state.fields;\r\n        fields['service'] = e.target.value;        \r\n        this.setState({fields});\r\n\r\n        this.setState({\r\n            price: e.target.value,\r\n            dateDisabled: false,\r\n        }, /*  () => console.log(this.state.selectedService) */ )\r\n        \r\n        if (e.target.value === \"1\") {\r\n            this.setState({\r\n                servicePrice: \"Price is 15$\"\r\n            })\r\n        } else if (e.target.value === \"2\") {\r\n            this.setState({\r\n                servicePrice: \"Price is 20$\"\r\n            })\r\n        } else if (e.target.value === \"3\") {\r\n            this.setState({\r\n                servicePrice: \"Price is 30$\"\r\n            })\r\n        } else {\r\n            \r\n        }\r\n    }\r\n\r\n    onChange = ( field, e) => {\r\n        this.setState({\r\n            getWorkingHours: this.state.barbers.map(barber => barber.workHours),\r\n            serviceDisable: false,\r\n        });\r\n\r\n        let fields = this.state.fields;\r\n        fields['barber'] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // GET BARBERS\r\n\r\n        fetch(baseUrl + '/barbers')\r\n        .then(getBarbers => {\r\n            return getBarbers.json();\r\n        })\r\n        .then(getBarbers => {\r\n            this.setState({\r\n                barbers: getBarbers\r\n            })\r\n        })\r\n        .catch(err => {\r\n            alert(\"Failed to load our Barbers\" + err)\r\n        });\r\n\r\n        // GET SERVICES\r\n\r\n        fetch(baseUrl + '/services')\r\n        .then(getServices => {\r\n            return getServices.json();\r\n        })\r\n        .then(getServices => {\r\n            this.setState({\r\n                services: getServices\r\n            })\r\n        })\r\n        .catch(err => {\r\n            alert(\"Failed to load our Services\" + err)\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { barbers, services, servicePrice, fields, errors, getWorkingHours, dateDisabled, timeDisabled } = this.state;\r\n        if (this.state.formValidated === true) {\r\n            return <Redirect to=\"/barberbooked\"/>\r\n        } else {\r\n            \r\n        }\r\n        return (\r\n            <div className=\"booking-app-wrapper\">\r\n                <div className=\"booking-app-title\">\r\n                    <h2>Book your appointment</h2>\r\n                </div>\r\n\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"First Name\" onChange={this.handleChange.bind(this, \"name\")} value={fields[\"name\"] || ''}/>\r\n                        <span className=\"error\">{errors[\"name\"]}</span>\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Last Name\" onChange={this.handleChange.bind(this, \"surname\")} value={fields[\"surname\"] || ''}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                        <input placeholder=\"Email\" onChange={this.handleChange.bind(this, \"email\")} value={fields[\"email\"] || ''} />\r\n                        <span className=\"error\">{errors[\"email\"]}</span>\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                        <input pattern=\"[0][0-9]{8}\" placeholder=\"Phone Number\" onChange={this.handleChange.bind(this, \"phone\")} value={fields[\"phone\"] || ''}/>\r\n                        <span className=\"error\">{errors[\"phone\"]}</span>\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                       <select value={fields[\"barber\"] || ''} onChange={this.onChange.bind(this, \"barber\")}>\r\n                           <option hidden>Select Barber</option>\r\n                           {barbers.map(barber => (\r\n                                <option value={barber.id} key={barber.id}>\r\n                                {barber.firstName} {barber.lastName}\r\n                                </option>\r\n                            ))}\r\n                       </select>\r\n                       <span className=\"error\">{errors[\"barber\"]}</span>\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                       <select value={fields[\"service\"] || ''} onChange={this.handleClick.bind(this, \"service\")} disabled={(this.state.serviceDisable === true ) ? \"disabled\" : null}>\r\n                           <option hidden>Select Service</option>\r\n                           {services.map(service => (\r\n                                <option value={service.id}\r\n                                    key={service.id}>\r\n                                    {service.name}\r\n                                </option>\r\n                            ))}\r\n                       </select>\r\n                       <span className=\"error\">{errors[\"service\"]}</span>\r\n                    </div>\r\n\r\n                    <TimePicker \r\n                    serviceId={this.state.price}\r\n                    errors={this.state.errors}\r\n                    callbackGetTimeValue={this.callbackGetTimeValue}\r\n                    callbackGetDateValue={this.callbackGetDateValue} \r\n                    getWorkingHours={getWorkingHours} \r\n                    datedisabled={dateDisabled} \r\n                    timeDisabled={timeDisabled}\r\n                    />\r\n\r\n                    <div className=\"input-wrapper price\">\r\n                        <input value={servicePrice} disabled/>\r\n                    </div>\r\n                    \r\n                    <input type=\"submit\" value=\"Book appointment\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookAppointment","import React, { Component } from 'react'\r\nimport '../sass/app.scss';\r\nimport SectionImage from '../img/image.jpg';\r\nimport BookAppointment from './BookAppointment';\r\n\r\nexport class AppointmentBooking extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"section-booking\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"section-title\">\r\n                        <h1>Book your barber</h1>\r\n                    </div>\r\n\r\n                    <div className=\"section-subtitle\">\r\n                        <h3>Great Hair Doesn’t Happen By Chance. It Happens By Appointment! So, Don't Wait And Book Your Appointment Now!</h3>\r\n                    </div>\r\n\r\n                    <div className=\"section-image\">\r\n                        <div className=\"image-wrapper\">\r\n                            <img alt=\"Barber banner\" src={SectionImage} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"section-booking-app\">\r\n                        <BookAppointment/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppointmentBooking\r\n","import React from 'react';\r\nimport AppointmentBooked from './components/AppointmentBooked';\r\nimport AppointmentBooking from './components/AppointmentBooking';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route basename=\"/barber-booking\" path={process.env.PUBLIC_URL + \"/\"} exact component={AppointmentBooking}/>\r\n        <Route path={process.env.PUBLIC_URL + '/barberbooked'} component={AppointmentBooked}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './sass/global.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/image.63f4e1b0.jpg\";"],"sourceRoot":""}